#! /usr/bin/python
# by pts@fazekas.hu at Sat Apr 25 19:20:59 CEST 2020

import binascii
import sys
import unittest

import rsakeytool

# six-like compatibility layer between Python 2.x and Python 3.x.
from rsakeytool import bb

DROPBEAR_DATA = binascii.unhexlify(bb('000000077373682d727361000000030100010000020100c7e5c2aaa8e9e8be55a16277ab0c60d5249c0996578ae1e63261664c3b08e42ce69af7817255d0c2b3cc640b311e7d76cf1a346839905195045a040c819bd2227300130a1a7ebe78609d69c0170a1362acd57e2a605b035ae9a4904d322621079b1484640269b7a115997ced3a1fb06e7e298ad57746a7395d9b09893e7d63c48f802132cd9c530a80af0d253705dfb1212adae3a29642aeeb18c52103ec8b5a731e65af07a6b1667e385f9208c7e41ef22085f9af955b373ecc96b04b20b24a9f835ec1787b4e5471a459b7ac23a3e8e1ee8c915081a1ee4a55a13c2b077f6c58aa7db1e4badcf670c24ff14c179146e573eb99db77bdf3a83bce808185b194953d5ccc78be03ec7665c6bab34a7fe45bfb306efa8d1e5e9dc2403ef66a1da2cae70b7026c5223782ae28252eac0103715e2e4341b9040d46f886bd198ccd832fddc3b977fa73015535927ed7813f62453722a3e64e3cec779bda447cd2455da608ea227cd35dfc69db9bced50d9c3d826bc8db25d7657a6268084dd8c267e36cc7882df00ae583deab706c558a60509dbfeb4a098c4df466c44bd86e7d28e53480f2c855b7b6688ebd1e1d1c4ae0e61718f114c88e274833dbdb058721d37aa43ff1e0d33dd14fc4463d86f0fe7f32fb438204536f67f25cfc7d85d6eb58e5122533ee69c7eda10f95b1a5217a23c25ef57292b571d60919ee20737cafff0900000201008b682fe7a6df6222834386916067c48c40f8d532d52095445df4514c6e8b57ddfc812c85494091d38762ce8e8395f8f7c79d45d93df3e9015cc48e384e9765e8027d95c9a10aad38f4603364f46c61729a885571a63b32cecf4ca61a4014194add9b646cfec5cd7b78bdcf42fe1b258719534d706bbb8959d76f0d2a7abb25bdea39f86d1eb99bac226c726576c710e6cdf3be2dacb0d0167efc8a55e90fa96bce06eff12e0bd182621a5c8452bd5cd93c10f47e5a367623c417182c2068d00e7cca386602e9338a6eaaa8ab1050d6b9cdfef8674b56eca06b94e65a38c404d881c97cd97863dd3fbd09b688d881431ec75c9d7d727242b5cfa8cdee0ee6371de50d4c4285c090baeebe8751242a6b9ee9fda9fa5a6fd93db08e52fcb92226bbd589ab5f31b01669e0c812fbae47fc1812f1619502a3cf8b3e592394f3b466293e9d355d17fef3b39afc137460f1e60746f62260a2fe2f419385e9a762cb18ad9a79d497ac9476d8c0a9fac34ea90729749ff6e0efbfe9f2976d1c6274a5e694118dfd1eb941f76f125ca85e1983bb8733dde8cca23f16fc0047f1a4b4959788764e1efdd2b292a8f54c6f11eea8bef5a262b75b9282f5528da9a7a7bf2d69cabee340238ad11d0f49333422fbded7df44d83b5a9c4d34e9b2113a7bf6a169a490afbcb48b12db4bf4920db53c376b7d7bcbd9a9859eeaaa31672bd38fb2f8250000010100f0710459cd01a206f4c4dbb8cd591c3f240c887c11bfef21d00cb0b973e4adafb373c1fec279252771e78f0cde980723f97c5457e72648e2eafaea98414eb8448be103e0e276c0a772735e9eacb45e2ac8d03562ea2c72fb1b83c101e6355aae764dff1fcd7f18ea3c8c384052e64cff91a23085d1149d9ed6c7e3bfa1e09735d6ebfeb981ed168c4942f384570c54b07c01e61afc9277a959147715ec17a29fc0a41e4c694813f755ba4f5ba21f221c0ac7d44e499e0856c66c1330b4d32f09e7b4f3bb47f6a564d381872e0d2b1b3c3dc132d31500e7fa7bde2c302a217bedba964d2dbc02d84b47cbe8bafac184963e65b028d9f6fa71b975440d0513aea30000010100d4d51ee89043051536d581b984820ba0925c006b327490ac010b27780b4612873d7c1ed1accd4e994518a51252de889410c8fefdb7fbfe05352506897a8e507eda7063ff33adda4020be19a32b26d13f35c0aa92d67cdca855561feb0e8d929481e29ce65906acc37eb514ac9b4743d8b6605ff6caa4abb1372c5b6d3c15639fc441cf5780f5dce59dc71c04e41b396bb84162b6d26f33b83ab6f63635f637d0dc36d263ba78c1bd0ba80726cda6ec09e90cd4933948ec17d43762f54c3fa8d33ed90b62204f35ba8b9354addbf227437ff5fe7f6602a3377f48a5e4db2fadd97b02ffe394a9cf2ffef2bbb1c0fa7b495306a4191aa9f4c5fea6dc9ec5c41263'))

DER2_DATA = binascii.unhexlify(bb('30820942020100300d06092a864886f70d01010105000482092c308209280201000282020100c7e5c2aaa8e9e8be55a16277ab0c60d5249c0996578ae1e63261664c3b08e42ce69af7817255d0c2b3cc640b311e7d76cf1a346839905195045a040c819bd2227300130a1a7ebe78609d69c0170a1362acd57e2a605b035ae9a4904d322621079b1484640269b7a115997ced3a1fb06e7e298ad57746a7395d9b09893e7d63c48f802132cd9c530a80af0d253705dfb1212adae3a29642aeeb18c52103ec8b5a731e65af07a6b1667e385f9208c7e41ef22085f9af955b373ecc96b04b20b24a9f835ec1787b4e5471a459b7ac23a3e8e1ee8c915081a1ee4a55a13c2b077f6c58aa7db1e4badcf670c24ff14c179146e573eb99db77bdf3a83bce808185b194953d5ccc78be03ec7665c6bab34a7fe45bfb306efa8d1e5e9dc2403ef66a1da2cae70b7026c5223782ae28252eac0103715e2e4341b9040d46f886bd198ccd832fddc3b977fa73015535927ed7813f62453722a3e64e3cec779bda447cd2455da608ea227cd35dfc69db9bced50d9c3d826bc8db25d7657a6268084dd8c267e36cc7882df00ae583deab706c558a60509dbfeb4a098c4df466c44bd86e7d28e53480f2c855b7b6688ebd1e1d1c4ae0e61718f114c88e274833dbdb058721d37aa43ff1e0d33dd14fc4463d86f0fe7f32fb438204536f67f25cfc7d85d6eb58e5122533ee69c7eda10f95b1a5217a23c25ef57292b571d60919ee20737cafff09020301000102820201008b682fe7a6df6222834386916067c48c40f8d532d52095445df4514c6e8b57ddfc812c85494091d38762ce8e8395f8f7c79d45d93df3e9015cc48e384e9765e8027d95c9a10aad38f4603364f46c61729a885571a63b32cecf4ca61a4014194add9b646cfec5cd7b78bdcf42fe1b258719534d706bbb8959d76f0d2a7abb25bdea39f86d1eb99bac226c726576c710e6cdf3be2dacb0d0167efc8a55e90fa96bce06eff12e0bd182621a5c8452bd5cd93c10f47e5a367623c417182c2068d00e7cca386602e9338a6eaaa8ab1050d6b9cdfef8674b56eca06b94e65a38c404d881c97cd97863dd3fbd09b688d881431ec75c9d7d727242b5cfa8cdee0ee6371de50d4c4285c090baeebe8751242a6b9ee9fda9fa5a6fd93db08e52fcb92226bbd589ab5f31b01669e0c812fbae47fc1812f1619502a3cf8b3e592394f3b466293e9d355d17fef3b39afc137460f1e60746f62260a2fe2f419385e9a762cb18ad9a79d497ac9476d8c0a9fac34ea90729749ff6e0efbfe9f2976d1c6274a5e694118dfd1eb941f76f125ca85e1983bb8733dde8cca23f16fc0047f1a4b4959788764e1efdd2b292a8f54c6f11eea8bef5a262b75b9282f5528da9a7a7bf2d69cabee340238ad11d0f49333422fbded7df44d83b5a9c4d34e9b2113a7bf6a169a490afbcb48b12db4bf4920db53c376b7d7bcbd9a9859eeaaa31672bd38fb2f8250282010100f0710459cd01a206f4c4dbb8cd591c3f240c887c11bfef21d00cb0b973e4adafb373c1fec279252771e78f0cde980723f97c5457e72648e2eafaea98414eb8448be103e0e276c0a772735e9eacb45e2ac8d03562ea2c72fb1b83c101e6355aae764dff1fcd7f18ea3c8c384052e64cff91a23085d1149d9ed6c7e3bfa1e09735d6ebfeb981ed168c4942f384570c54b07c01e61afc9277a959147715ec17a29fc0a41e4c694813f755ba4f5ba21f221c0ac7d44e499e0856c66c1330b4d32f09e7b4f3bb47f6a564d381872e0d2b1b3c3dc132d31500e7fa7bde2c302a217bedba964d2dbc02d84b47cbe8bafac184963e65b028d9f6fa71b975440d0513aea30282010100d4d51ee89043051536d581b984820ba0925c006b327490ac010b27780b4612873d7c1ed1accd4e994518a51252de889410c8fefdb7fbfe05352506897a8e507eda7063ff33adda4020be19a32b26d13f35c0aa92d67cdca855561feb0e8d929481e29ce65906acc37eb514ac9b4743d8b6605ff6caa4abb1372c5b6d3c15639fc441cf5780f5dce59dc71c04e41b396bb84162b6d26f33b83ab6f63635f637d0dc36d263ba78c1bd0ba80726cda6ec09e90cd4933948ec17d43762f54c3fa8d33ed90b62204f35ba8b9354addbf227437ff5fe7f6602a3377f48a5e4db2fadd97b02ffe394a9cf2ffef2bbb1c0fa7b495306a4191aa9f4c5fea6dc9ec5c4126302820100350667943a4ed2e1bfd72e31aa2fadb80b062c8f5806c100eef5ed7f689c94e53ba91aae494b183383be3260ff31fdd9242b141ab2a251cea14da6b0df2e321b03d222ddd473a5f7079983d37078f28f72ebdfea298495f2e4d5809a1f9fc298d9044870460c727d2dcf2a949cf3a72571839839daab363b925850d4b1296b8f770f62849cafa19a5c89c4547a3200f74ed1c86249332fea8bf7a46f943a7e25c7012aa165527cfcbdce31b41ea3c90cf01fb3a5743cc2d008404b572179b554f4e18622d63301b4a3a45c207eccf3dbac2ed03b96d535539b3f9af5204574243052f7404fc73cd6154655d3ee7b00f775594da924b07ff8d69292e86027400b0282010067ce8f25c57f3ad26f0d5219873cdaa8f5d9f3c65534af7f857ec8406fd73ca043e7ef2c3b8963c5b402e2387ebcd586ca6d0e99f78bec08e433ebed501e6bba83967fdf7078625416e441a2e92024bd1cdd9d14c392e119258e3d412bb6f780819d6303a2f6737b62a8b5adbe8ad2d7b7946819fa1ab937557ec8150e522c66379615a84b591fe5cabfdbb5b300685056ed6555606c26a0bbda935a3b959d01bcf6ec45022575f15be7179de07e82f00e80588a7a4d4c020f5af864464d626dae60b481a6da9b8d2218b91b9784938c03b49aedce7688df3fb0d2613e5b12035a514b37d841beb15d3b4d3ad4b21741db4208f5c9a08da7a89e004b5c90569b02820100396271522fa813889c95111768c398ba21768328c008f9fca9868502ab1fa1bfc7c73f8ece306ec4a449a91862047d6a6bf55bdb7175e8ae5337180be4cd0ebcc6ee8ffd225b5d0a83da0f3a0256eed6232cfde243543a6601352c53c6d2028db854870169d912d7c3914aa0698fa7fadf60b713847de69e090325502a5a417c75b272d0aeb81eb19d31980a08850a30bd04d1a33093fee0fcc2a3b76e62c0834fa4633437f0a77143eba92b76590223e5f6de7488c171381593848c6b6a0d5b8a95f09c0aee821fa2bc057ba8f2751f3e9d105937c60782d1e8e7933cddf1876e697d44c93fc1e1006568e66d0d79b2cb4882d4dd618991a5a3a7b1b2c1362a'))

PEM2_DATA = bb('''-----BEGIN PRIVATE KEY-----
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
aOZtDXmyy0iC1N1hiZGlo6exssE2Kg==
-----END PRIVATE KEY-----
''')


def get_test_rsa_key():
  # Example 4096-bit key (modulus size).
  return rsakeytool.get_rsa_private_key(
      modulus=0x00c7e5c2aaa8e9e8be55a16277ab0c60d5249c0996578ae1e63261664c3b08e42ce69af7817255d0c2b3cc640b311e7d76cf1a346839905195045a040c819bd2227300130a1a7ebe78609d69c0170a1362acd57e2a605b035ae9a4904d322621079b1484640269b7a115997ced3a1fb06e7e298ad57746a7395d9b09893e7d63c48f802132cd9c530a80af0d253705dfb1212adae3a29642aeeb18c52103ec8b5a731e65af07a6b1667e385f9208c7e41ef22085f9af955b373ecc96b04b20b24a9f835ec1787b4e5471a459b7ac23a3e8e1ee8c915081a1ee4a55a13c2b077f6c58aa7db1e4badcf670c24ff14c179146e573eb99db77bdf3a83bce808185b194953d5ccc78be03ec7665c6bab34a7fe45bfb306efa8d1e5e9dc2403ef66a1da2cae70b7026c5223782ae28252eac0103715e2e4341b9040d46f886bd198ccd832fddc3b977fa73015535927ed7813f62453722a3e64e3cec779bda447cd2455da608ea227cd35dfc69db9bced50d9c3d826bc8db25d7657a6268084dd8c267e36cc7882df00ae583deab706c558a60509dbfeb4a098c4df466c44bd86e7d28e53480f2c855b7b6688ebd1e1d1c4ae0e61718f114c88e274833dbdb058721d37aa43ff1e0d33dd14fc4463d86f0fe7f32fb438204536f67f25cfc7d85d6eb58e5122533ee69c7eda10f95b1a5217a23c25ef57292b571d60919ee20737cafff09,
      public_exponent=0x10001,
      prime1=0x00f0710459cd01a206f4c4dbb8cd591c3f240c887c11bfef21d00cb0b973e4adafb373c1fec279252771e78f0cde980723f97c5457e72648e2eafaea98414eb8448be103e0e276c0a772735e9eacb45e2ac8d03562ea2c72fb1b83c101e6355aae764dff1fcd7f18ea3c8c384052e64cff91a23085d1149d9ed6c7e3bfa1e09735d6ebfeb981ed168c4942f384570c54b07c01e61afc9277a959147715ec17a29fc0a41e4c694813f755ba4f5ba21f221c0ac7d44e499e0856c66c1330b4d32f09e7b4f3bb47f6a564d381872e0d2b1b3c3dc132d31500e7fa7bde2c302a217bedba964d2dbc02d84b47cbe8bafac184963e65b028d9f6fa71b975440d0513aea3)


class RsakeytoolTest(unittest.TestCase):
  def test_convert(self):
    d = get_test_rsa_key()
    assert rsakeytool.is_rsa_private_key_complete(d)
    convert_rsa_data = rsakeytool.convert_rsa_data
    der = convert_rsa_data(d, 'der')
    pem = convert_rsa_data(d, 'pem')
    der2 = convert_rsa_data(d, 'der2')
    pem2 = convert_rsa_data(d, 'pem2')
    assert convert_rsa_data(der, 'der') == der
    assert convert_rsa_data(pem, 'der') == der
    assert convert_rsa_data(der2, 'der') == der
    assert convert_rsa_data(pem2, 'der') == der
    assert convert_rsa_data(der, 'dict') == d
    assert convert_rsa_data(convert_rsa_data(der, 'dropbear'), 'der') == der

  def test_golden(self):
    d = get_test_rsa_key()
    convert_rsa_data = rsakeytool.convert_rsa_data
    assert convert_rsa_data(d, 'dropbear') == DROPBEAR_DATA
    assert convert_rsa_data(DROPBEAR_DATA, 'dict') == d
    assert convert_rsa_data(d, 'der2') == DER2_DATA
    assert convert_rsa_data(DER2_DATA, 'dict') == d
    assert convert_rsa_data(d, 'pem2') == PEM2_DATA
    assert convert_rsa_data(PEM2_DATA, 'dict') == d


if __name__ == '__main__':
  unittest.main(argv=[sys.argv[0], '-v'] + sys.argv[1:])
